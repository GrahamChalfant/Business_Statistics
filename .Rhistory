summary(daydata)
# Chunk 3
ggplot(daydata, aes(x = mnth, y = cnt)) + geom_point() + geom_smooth(method = lm) # Bikes become more popular over time
ggplot(daydata, aes(x = mnth, y = cnt)) + geom_point() + geom_smooth()#There is a seasonality for bike rentals
bikes.by.month <- lm(cnt ~ mnth, data = daydata)
anova(bikes.by.month)
anova(lm1) #Used anova to measure effect of 'intrial' on sales gain
anova(lm1, lm4)
anova(lm1, lm3)
anova(lm1, lm4)
ggplot(daydata, aes(x = mnth, y = cnt)) + geom_point() + geom_smooth(method = lm) # Bikes become more popular over time
ggplot(daydata, aes(x = mnth, y = cnt)) + geom_point() + geom_smooth()#There is a seasonality for bike rentals
ggplot(daydata, aes(x = mnth, y = cnt)) + geom_point() + geom_smooth()#There is a seasonality for bike rentals
ggplot(daydata, aes(x = mnth, y = cnt)) + geom_point() + geom_smooth(method = lm) # Bikes become more popular over time
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial)
ggplot(data, aes(x=sales_change, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial)
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial)
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Change by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by 'intrial' & 'outlettype'", y = "Frequency", x = "Sales Gain")
#Sales growth diff
grid.arrange(
ggplot(summary(lm1.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Intrial", y = "Sales Gain", title = "Average Sales Gain by Intrial \n [95% Confidence Intervals]") + scale_y_continuous(labels = comma),
ggplot(lm1.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Sales Gain", title = "Difference in Sales Gain when \n Intrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain GBP")
#Percent growth diff
grid.arrange(
ggplot(summary(lm2.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Intrial", y = "Percent Gain", title = "Average Sales Gain Percent by  \n Intrial [95% Confidence Intervals]") + scale_y_continuous(labels = comma),
ggplot(lm2.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Percent Gain", title = "Difference in Sales Gain Percent  \n when Inrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain as Percent of GBP")
#Sales growth diff
grid.arrange( #grid arrange to put two charts in the same output
ggplot(summary(lm1.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + geom_point()+
geom_linerange() + #adds confidence intervals for estimated mean
geom_hline(yintercept = 0, linetype = 2) + #adds horizontal line at 0
labs(x = "Intrial", y = "Sales Gain", title = "Average Sales Gain by Intrial \n [95% Confidence Intervals]") + #labels for charts
scale_y_continuous(labels = comma), #adds commas to the x axis scale
ggplot(lm1.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Sales Gain", title = "Difference in Sales Gain when \n Intrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain GBP")
#Percent growth diff
grid.arrange(
ggplot(summary(lm2.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Intrial", y = "Percent Gain", title = "Average Sales Gain Percent by  \n Intrial [95% Confidence Intervals]") + scale_y_continuous(labels = comma),
ggplot(lm2.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Percent Gain", title = "Difference in Sales Gain Percent  \n when Inrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain as Percent of GBP")
#Sales growth diff
grid.arrange( #grid arrange to put two charts in the same output
ggplot(summary(lm1.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + #Specifying data to be plotted
geom_point()+ #creates a scatterplot
geom_linerange() + #adds confidence intervals for estimated mean
geom_hline(yintercept = 0, linetype = 2) + #adds horizontal line at 0
labs(x = "Intrial", y = "Sales Gain", title = "Average Sales Gain by Intrial \n [95% Confidence Intervals]") + #labels for charts
scale_y_continuous(labels = comma), #adds commas to the x axis scale
ggplot(lm1.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Sales Gain", title = "Difference in Sales Gain when \n Intrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain GBP")
#Percent growth diff
grid.arrange(
ggplot(summary(lm2.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Intrial", y = "Percent Gain", title = "Average Sales Gain Percent by  \n Intrial [95% Confidence Intervals]") + scale_y_continuous(labels = comma),
ggplot(lm2.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Percent Gain", title = "Difference in Sales Gain Percent  \n when Inrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain as Percent of GBP")
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
data <- read.csv("sales_data.txt", stringsAsFactors = TRUE)
boxplot(data$staff_turnover) #Plotting data to find outliers
summary(lm1)
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
data <- read.csv("sales_data.txt", stringsAsFactors = TRUE)
str(data) #Checkig format of data
summary(data) #Checking for format of data and missing values
boxplot(data$staff_turnover) #Plotting data to find outliers
boxplot(data$sales_1)
boxplot(data$sales_2)
#Cannot investigate all of the outliers, so we cannot be sure if they need to be removed or not
data <- subset(data, staff_turnover < 0.039476) #Removing one extreme point that is far from any other observations
data <- data %>% mutate(sales_change = sales_2 - sales_1, percentage_diff = ((sales_2 - sales_1)/sales_1)*100) #Adding columns to show difference in sales_1 and sales_2, both in GBP and percentages
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by 'intrial' & 'outlettype'", y = "Frequency", x = "Sales Gain")
# Creating linear model and finding estimated means and confidence intervals
lm1 <- lm(sales_change~intrial, data=data)
( lm1.emm <- emmeans(lm1, ~intrial)  )
( lm1.contrast <- confint(pairs(lm1.emm)) )
#Using anova and summary to for null hypothesis testing
anova(lm1)
summary(lm1)
summary(lm1)
( lm3.emm <- emmeans(lm3, ~intrial * outlettype)  )
lm3 <- lm(sales_change~intrial * outlettype, data=data)
( lm3.emm <- emmeans(lm3, ~intrial * outlettype)  )
lm4 <- lm(sales_change~intrial * staff_turnover, data=data)
( lm4.emm <- emmeans(lm4, ~intrial * staff_turnover)  )
( lm4.contrast <- confint(pairs(lm4.emm)) )
summary(lm4)
anova(lm3)
summary(lm3)
( lm3.contrast <- confint(pairs(lm3.emm)) )
( lm3.emm <- emmeans(lm3, ~intrial * outlettype)  )
summary(lm3)
anova(lm1, lm3) #ANOVA comparing the model controlling for 'intrial' against the one controlling for 'intrial' & 'outlettype'
anova(lm1, lm4) #ANOVA comparing the model controlling for 'intrial' against the one controlling for 'intrial' & 'staff_turnover'
( lm3.contrast <- confint(pairs(lm3.emm)) )
#Sales growth diff
grid.arrange( #grid arrange to put two charts in the same output
ggplot(summary(lm1.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + #Specifying data to be plotted
geom_point()+ #creates a scatterplot
geom_linerange() + #adds confidence intervals for estimated mean
geom_hline(yintercept = 0, linetype = 2) + #adds horizontal line at 0
labs(x = "Intrial", y = "Sales Gain", title = "Average Sales Gain by Intrial \n [95% Confidence Intervals]") + #labels for charts
scale_y_continuous(labels = comma), #adds commas to the y axis scale
ggplot(lm1.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Sales Gain", title = "Difference in Sales Gain when \n Intrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain GBP")
#Percent growth diff
grid.arrange(
ggplot(summary(lm2.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Intrial", y = "Percent Gain", title = "Average Sales Gain Percent by  \n Intrial [95% Confidence Intervals]") + scale_y_continuous(labels = comma),
ggplot(lm2.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Percent Gain", title = "Difference in Sales Gain Percent  \n when Inrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain as Percent of GBP")
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
data <- read.csv("sales_data.txt", stringsAsFactors = TRUE)
str(data) #Checkig format of data
summary(data) #Checking for format of data and missing values
boxplot(data$staff_turnover) #Plotting data to find outliers
boxplot(data$sales_1)
boxplot(data$sales_2)
#Cannot investigate all of the outliers, so we cannot be sure if they need to be removed or not
data <- subset(data, staff_turnover < 0.039476) #Removing one extreme point that is far from any other observations
data <- data %>% mutate(sales_change = sales_2 - sales_1, percentage_diff = ((sales_2 - sales_1)/sales_1)*100) #Adding columns to show difference in sales_1 and sales_2, both in GBP and percentages
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by 'intrial' & 'outlettype'", y = "Frequency", x = "Sales Gain")
# Creating linear model and finding estimated means and confidence intervals
lm1 <- lm(sales_change~intrial, data=data)
( lm1.emm <- emmeans(lm1, ~intrial)  )
( lm1.contrast <- confint(pairs(lm1.emm)) )
#Using anova and summary to for null hypothesis testing
anova(lm1)
summary(lm1)
lm2 <- lm(percentage_diff~intrial, data=data)
( lm2.emm <- emmeans(lm2, ~intrial)  )
( lm2.contrast <- confint(pairs(lm2.emm)) )
anova(lm2)
summary(lm2)
ggplot(data, aes(x=sales_change, fill=intrial)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + labs(title = "Sales Gain by Intrial", x = "Sales Gain", y = "Frequency") #ggplot histogram showing averages sales gain controlling for 'intrial'
#Sales growth diff
grid.arrange( #grid arrange to put two charts in the same output
ggplot(summary(lm1.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + #Specifying data to be plotted
geom_point()+ #creates a scatterplot
geom_linerange() + #adds confidence intervals for estimated mean
geom_hline(yintercept = 0, linetype = 2) + #adds horizontal line at 0
labs(x = "Intrial", y = "Sales Gain", title = "Average Sales Gain by Intrial \n [95% Confidence Intervals]") + #labels for charts
scale_y_continuous(labels = comma), #adds commas to the y axis scale
ggplot(lm1.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Sales Gain", title = "Difference in Sales Gain when \n Intrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain GBP")
#Percent growth diff
grid.arrange(
ggplot(summary(lm2.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Intrial", y = "Percent Gain", title = "Average Sales Gain Percent by  \n Intrial [95% Confidence Intervals]") + scale_y_continuous(labels = comma),
ggplot(lm2.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Percent Gain", title = "Difference in Sales Gain Percent  \n when Inrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain as Percent of GBP")
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
ggplot(data, aes(x = percent_diff)) + geom_hist()
ggplot(data, aes(x = percent_diff)) + geom_hist()
cite(tidyverse)
cite("tidyverse")
data <- data %>% mutate(sales_change = sales_2 - sales_1, percentage_diff = ((sales_2 - sales_1)/sales_1)*100) #Adding columns to show difference in sales_1 and sales_2, both in GBP and percentages
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
data <- read.csv("sales_data.txt", stringsAsFactors = TRUE)
str(data) #Checkig format of data
summary(data) #Checking for format of data and missing values
boxplot(data$staff_turnover) #Plotting data to find outliers
boxplot(data$sales_1)
boxplot(data$sales_2)
#Cannot investigate all of the outliers, so we cannot be sure if they need to be removed or not
data <- subset(data, staff_turnover < 0.039476) #Removing one extreme point that is far from any other observations
data <- data %>% mutate(sales_change = sales_2 - sales_1, percentage_diff = ((sales_2 - sales_1)/sales_1)*100) #Adding columns to show difference in sales_1 and sales_2, both in GBP and percentages
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
lm4 <- lm(sales_change~intrial + staff_turnover, data=data)
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
data <- read.csv("sales_data.txt", stringsAsFactors = TRUE)
str(data) #Checkig format of data
summary(data) #Checking for format of data and missing values
boxplot(data$staff_turnover) #Plotting data to find outliers
boxplot(data$sales_1)
boxplot(data$sales_2)
#Cannot investigate all of the outliers, so we cannot be sure if they need to be removed or not
data <- subset(data, staff_turnover < 0.039476) #Removing one extreme point that is far from any other observations
data <- data %>% mutate(sales_change = sales_2 - sales_1, percentage_diff = ((sales_2 - sales_1)/sales_1)*100) #Adding columns to show difference in sales_1 and sales_2, both in GBP and percentages
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by 'intrial' & 'outlettype'", y = "Frequency", x = "Sales Gain")
# Creating linear model and finding estimated means and confidence intervals
lm1 <- lm(sales_change~intrial, data=data)
( lm1.emm <- emmeans(lm1, ~intrial)  )
( lm1.contrast <- confint(pairs(lm1.emm)) )
#Using anova and summary to for null hypothesis testing
anova(lm1)
summary(lm1)
lm2 <- lm(percentage_diff~intrial, data=data)
( lm2.emm <- emmeans(lm2, ~intrial)  )
( lm2.contrast <- confint(pairs(lm2.emm)) )
anova(lm2)
summary(lm2)
ggplot(data, aes(x=sales_change, fill=intrial)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + labs(title = "Sales Gain by Intrial", x = "Sales Gain", y = "Frequency") #ggplot histogram showing averages sales gain controlling for 'intrial'
#Sales growth diff
grid.arrange( #grid arrange to put two charts in the same output
ggplot(summary(lm1.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + #Specifying data to be plotted
geom_point()+ #creates a scatterplot
geom_linerange() + #adds confidence intervals for estimated mean
geom_hline(yintercept = 0, linetype = 2) + #adds horizontal line at 0
labs(x = "Intrial", y = "Sales Gain", title = "Average Sales Gain by Intrial \n [95% Confidence Intervals]") + #labels for charts
scale_y_continuous(labels = comma), #adds commas to the y axis scale
ggplot(lm1.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Sales Gain", title = "Difference in Sales Gain when \n Intrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain GBP")
#Percent growth diff
grid.arrange(
ggplot(summary(lm2.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Intrial", y = "Percent Gain", title = "Average Sales Gain Percent by  \n Intrial [95% Confidence Intervals]") + scale_y_continuous(labels = comma),
ggplot(lm2.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Percent Gain", title = "Difference in Sales Gain Percent  \n when Inrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain as Percent of GBP")
lm3 <- lm(sales_change~intrial * outlettype, data=data)
( lm3.emm <- emmeans(lm3, ~intrial * outlettype)  )
( lm3.contrast <- confint(pairs(lm3.emm)) )
summary(lm3)
anova(lm3)
ggplot(summary(lm3.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL, color = outlettype)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Intrial", y = "Sales Gain", title = "Average Sales Gain by Intrial and Outlettype [95% Confidence Intervals]") + scale_y_continuous(labels = comma) #adds commas to y axis scale
lm4 <- lm(sales_change~intrial + staff_turnover, data=data)
( lm4.emm <- emmeans(lm4, ~intrial + staff_turnover)  )
( lm4.contrast <- confint(pairs(lm4.emm)) )
summary(lm4)
anova(lm1, lm4) #ANOVA comparing the model controlling for 'intrial' against the one controlling for 'intrial' & 'staff_turnover'
anova(lm1, lm4) #ANOVA comparing the model controlling for 'intrial' against the one controlling for 'intrial' & 'staff_turnover'
#Using anova and summary to for null hypothesis testing
anova(lm1)
summary(lm1)
#Using anova and summary to for null hypothesis testing
anova(lm1)
summary(lm1)
ggplot(data, aes(x=sales_change, fill=intrial)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + labs(title = "Sales Gain by Intrial", x = "Sales Gain", y = "Frequency") #ggplot histogram showing averages sales gain controlling for 'intrial'
citation("tidyverse")
citation("tidyverse")
citation("scales")
citation("emmeans")
citation("gridExtra")
citation("Hmisc")
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
data <- read.csv("sales_data.txt", stringsAsFactors = TRUE)
#str(data)
#summary(data)
boxplot(data$staff_turnover)
#boxplot(data$sales_1)
#boxplot(data$sales_2)
data <- subset(data, staff_turnover < 0.039476) #Removing one extreme point which is very different from all other observations
data <- data %>% mutate(sales_change = sales_2 - sales_1, percentage_diff = ((sales_2 - sales_1)/sales_1)*100) # calculating difference in sales_1 and sales_2 in both in GBP and percentages
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by 'intrial' & 'outlettype'", y = "Frequency", x = "Sales Gain")
# Creating linear model and finding estimated means and confidence intervals
lm1 <- lm(sales_change~intrial, data=data)
( lm1.emm <- emmeans(lm1, ~intrial)  )
( lm1.contrast <- confint(pairs(lm1.emm)) )
#Using anova and summary to for null hypothesis testing
anova(lm1)
summary(lm1)
summary(lm1)
#Using anova and summary to for null hypothesis testing
anova(lm1)
( lm1.emm <- emmeans(lm1, ~intrial)  )
summary(lm1)
summary(lm2)
# Creating linear model and finding estimated means and confidence intervals
lm2 <- lm(percentage_diff~intrial, data=data)
( lm2.emm <- emmeans(lm2, ~intrial)  )
#Using anova and summary to for null hypothesis testing
anova(lm2)
summary(lm2)
# Creating linear model and finding estimated means and confidence intervals
lm3 <- lm(sales_change~intrial * outlettype, data=data)
( lm3.emm <- emmeans(lm3, ~intrial * outlettype)  )
( lm3.contrast <- confint(pairs(lm3.emm)) )
#Using anova and summary to for null hypothesis testing
summary(lm3)
anova(lm3)
#Using anova and summary to for null hypothesis testing
summary(lm3)
# Creating linear model and finding estimated means and confidence intervals
lm4 <- lm(sales_change~intrial * outlettype + staff_turnover, data=data)
( lm4.emm <- emmeans(lm4, ~intrial * outlettype + staff_turnover)  )
( lm4.contrast <- confint(pairs(lm4.emm)) )
#Using anova and summary to for null hypothesis testing
summary(lm4)
anova(lm4)
anova(lm1, lm3) #ANOVA comparing the model lm1 and lm3
anova(lm3, lm4) #ANOVA comparing the model lm3 and lm4
( lm3.emm <- emmeans(lm3, ~intrial * outlettype)  )
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
data <- read.csv("sales_data.txt", stringsAsFactors = TRUE)
#str(data)
#summary(data)
boxplot(data$staff_turnover)
#boxplot(data$sales_1)
#boxplot(data$sales_2)
data <- subset(data, staff_turnover < 0.039476) #Removing one extreme point which is very different from all other observations
data <- data %>% mutate(sales_change = sales_2 - sales_1, percentage_diff = ((sales_2 - sales_1)/sales_1)*100) # calculating difference in sales_1 and sales_2 in both in GBP and percentages
ggplot(data, aes(x=percentage_diff)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=percentage_diff)) + geom_histogram(position="identity", alpha=0.5, binwidth=1500) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=percentage_diff)) + geom_histogram(position="identity", alpha=0.5, binwidth=15) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=percentage_diff)) + geom_histogram(position="identity", alpha=0.5, binwidth=1) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=percentage_diff)) + geom_histogram(position="identity", alpha=0.5, binwidth=.5) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=percentage_diff)) + geom_histogram(position="identity", alpha=0.5, binwidth=.75) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=percentage_diff, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=.75) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by 'intrial' & 'outlettype'", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by 'intrial' & 'outlettype'", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=percentage_diff, fill=intrial)) + geom_histogram(position="identity", alpha=0.5, binwidth=.75) + labs(title = "Sales Gain by Intrial", x = "Sales Gain", y = "Frequency")
ggplot(data, aes(x=sales_change, fill=intrial)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + labs(title = "Sales Gain by Intrial", x = "Sales Gain", y = "Frequency")
ggplot(data, aes(x=percentage_diff, fill=intrial)) + geom_histogram(position="identity", alpha=0.5, binwidth=.75) + labs(title = "Sales Gain by Intrial", x = "Sales Gain", y = "Frequency")
ggplot(data, aes(x=sales_change, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by 'intrial' & 'outlettype'", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change, fill=intrial)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + labs(title = "Sales Gain by Intrial", x = "Sales Gain", y = "Frequency")
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
data <- read.csv("sales_data.txt", stringsAsFactors = TRUE)
#str(data)
#summary(data)
boxplot(data$staff_turnover)
#boxplot(data$sales_1)
#boxplot(data$sales_2)
data <- subset(data, staff_turnover < 0.039476) #Removing one extreme point which is very different from all other observations
data <- data %>% mutate(sales_change = sales_2 - sales_1, percentage_diff = ((sales_2 - sales_1)/sales_1)*100) # calculating difference in sales_1 and sales_2 in both in GBP and percentages
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by 'intrial' & 'outlettype'", y = "Frequency", x = "Sales Gain")
# Creating linear model and finding estimated means and confidence intervals
lm1 <- lm(sales_change~intrial, data=data)
( lm1.emm <- emmeans(lm1, ~intrial)  )
( lm1.contrast <- confint(pairs(lm1.emm)) )
#Using anova and summary to for null hypothesis testing
anova(lm1)
summary(lm1)
# Creating linear model and finding estimated means and confidence intervals
lm2 <- lm(percentage_diff~intrial, data=data)
( lm2.emm <- emmeans(lm2, ~intrial)  )
( lm2.contrast <- confint(pairs(lm2.emm)) )
#Using anova and summary to for null hypothesis testing
anova(lm2)
summary(lm2)
cor(data$sales_change, data$intrial, method = "pearson")
cor(data$percentage_diff, data$intrial, method = "pearson")
ggplot(data, aes(x=sales_change, fill=intrial)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + labs(title = "Sales Gain by Intrial", x = "Sales Gain", y = "Frequency")
#Sales growth diff using estimated means and confidence intervals from lm1
grid.arrange(
ggplot(summary(lm1.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + geom_point()+ geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Intrial", y = "Sales Gain", title = "Average Sales Gain by Intrial \n [95% Confidence Intervals]") + scale_y_continuous(labels = comma),
ggplot(lm1.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Sales Gain", title = "Difference in Sales Gain when \n Intrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain GBP")
#Percent growth diff using estimated means and confidence intervals from lm2
grid.arrange(
ggplot(summary(lm2.emm), mapping = aes(x = intrial, y = emmean, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Intrial", y = "Percent Gain", title = "Average Sales Gain Percent by  \n Intrial [95% Confidence Intervals]") + scale_y_continuous(labels = comma),
ggplot(lm2.contrast, mapping = aes(x = contrast, y = estimate, ymin = lower.CL, ymax = upper.CL)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(y = "Percent Gain", title = "Difference in Sales Gain Percent  \n when Inrial vs Not Intrial \n [95% Confidence Interval]") + scale_y_continuous(labels = comma)
, ncol = 2, top = "Average Sales Gain as Percent of GBP")
# Creating linear model and finding estimated means and confidence intervals
lm3 <- lm(sales_change~intrial * outlettype, data=data)
( lm3.emm <- emmeans(lm3, ~intrial * outlettype)  )
( lm3.contrast <- confint(pairs(lm3.emm)) )
#Using anova and summary to for null hypothesis testing
summary(lm3)
anova(lm3)
ggplot(summary(lm3.emm), mapping = aes(x = outlettype, y = emmean, ymin = lower.CL, ymax = upper.CL, color = intrial)) + geom_point() + geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Outlet Type", y = "Sales Gain", title = "Average Sales Gain by Intrial and Outlettype [95% Confidence Intervals]") + scale_y_continuous(labels = comma) #adds commas to y axis scale
# Creating linear model and finding estimated means and confidence intervals
lm4 <- lm(sales_change~intrial * outlettype + staff_turnover, data=data)
( lm4.emm <- emmeans(lm4, ~intrial * outlettype + staff_turnover)  )
( lm4.contrast <- confint(pairs(lm4.emm)) )
#Using anova and summary to for null hypothesis testing
summary(lm4)
anova(lm4)
grid.arrange(
ggplot(summary(lm3.emm), mapping = aes(x = outlettype, y = emmean, ymin = lower.CL, ymax = upper.CL, color = intrial)) + geom_point()+ geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "Without 'staff_turnover'", y = "Sales Gain") + scale_y_continuous(labels = comma) + theme(legend.position = "none", axis.text.x = element_text(angle = 15)),
ggplot(summary(lm4.emm), mapping = aes(x = outlettype, y = emmean, ymin = lower.CL, ymax = upper.CL, color = intrial)) + geom_point()+ geom_linerange() + geom_hline(yintercept = 0, linetype = 2) + labs(x = "With 'staff_turnover'", y = "Sales Gain") + scale_y_continuous(labels = comma)+ theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x = element_text(angle = 15)),
ncol = 2, top = "Avg. Sales Gain Controlling for 'outlettype' & 'staff_turnover' [95% Confidence Intervals]")
anova(lm1, lm3) #ANOVA comparing the model lm1 and lm3
anova(lm3, lm4) #ANOVA comparing the model lm3 and lm4
citation("tidyverse")
citation("scales")
citation("emmeans")
citation("gridExtra")
citation("Hmisc")
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
data <- read.csv("sales_data.txt", stringsAsFactors = TRUE)
#str(data)
#summary(data)
boxplot(data$staff_turnover)
#boxplot(data$sales_1)
#boxplot(data$sales_2)
data <- subset(data, staff_turnover < 0.039476) #Removing one extreme point which is very different from all other observations
data <- data %>% mutate(sales_change = sales_2 - sales_1, percentage_diff = ((sales_2 - sales_1)/sales_1)*100) # calculating difference in sales_1 and sales_2 in both in GBP and percentages
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by 'intrial' & 'outlettype'", y = "Frequency", x = "Sales Gain")
# Creating linear model and finding estimated means and confidence intervals
lm1 <- lm(sales_change~intrial, data=data)
( lm1.emm <- emmeans(lm1, ~intrial)  )
( lm1.contrast <- confint(pairs(lm1.emm)) )
#Using anova and summary to for null hypothesis testing
anova(lm1)
summary(lm1)
# Creating linear model and finding estimated means and confidence intervals
lm2 <- lm(percentage_diff~intrial, data=data)
( lm2.emm <- emmeans(lm2, ~intrial)  )
( lm2.contrast <- confint(pairs(lm2.emm)) )
#Using anova and summary to for null hypothesis testing
anova(lm2)
summary(lm2)
cor(data$sales_change, data$intrial, method = "pearson")
cor(data$percentage_diff, data$intrial, method = "pearson")
ggplot(data, aes(x=percentage_diff, fill=intrial)) + geom_histogram(position="identity", alpha=0.5, binwidth=.75) + labs(title = "Sales Gain by Intrial", x = "Sales Gain", y = "Frequency")
ggplot(data, aes(x=sales_change, fill=intrial)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + labs(title = "Sales Gain by Intrial", x = "Sales Gain", y = "Frequency")
options(width=100)
library(tidyverse)
library(scales)
library(emmeans)
library(gridExtra)
library(Hmisc)
data <- read.csv("sales_data.txt", stringsAsFactors = TRUE)
#str(data)
#summary(data)
boxplot(data$staff_turnover)
#boxplot(data$sales_1)
#boxplot(data$sales_2)
data <- subset(data, staff_turnover < 0.039476) #Removing one extreme point which is very different from all other observations
data <- data %>% mutate(sales_change = sales_2 - sales_1, percentage_diff = ((sales_2 - sales_1)/sales_1)*100) # calculating difference in sales_1 and sales_2 in both in GBP and percentages
ggplot(data, aes(x=sales_change)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by Intrail", y = "Frequency", x = "Sales Gain")
ggplot(data, aes(x=sales_change, fill=outlettype)) + geom_histogram(position="identity", alpha=0.5, binwidth=150000) + facet_wrap(~intrial) + labs(title = "Average Sales Gain by 'intrial' & 'outlettype'", y = "Frequency", x = "Sales Gain")
# Creating linear model and finding estimated means and confidence intervals
lm1 <- lm(sales_change~intrial, data=data)
( lm1.emm <- emmeans(lm1, ~intrial)  )
( lm1.contrast <- confint(pairs(lm1.emm)) )
#Using anova and summary to for null hypothesis testing
anova(lm1)
summary(lm1)
summary(lm2)
# Creating linear model and finding estimated means and confidence intervals
lm2 <- lm(percentage_diff~intrial, data=data)
( lm2.emm <- emmeans(lm2, ~intrial)  )
( lm2.contrast <- confint(pairs(lm2.emm)) )
#Using anova and summary to for null hypothesis testing
anova(lm2)
summary(lm2)
#Using anova and summary to for null hypothesis testing
anova(lm2)
summary(lm2)
anova(lm3.contrast)
# Creating linear model and finding estimated means and confidence intervals
lm3 <- lm(sales_change~intrial * outlettype, data=data)
( lm3.emm <- emmeans(lm3, ~intrial * outlettype)  )
( lm3.contrast <- confint(pairs(lm3.emm)) )
#Using anova and summary to for null hypothesis testing
summary(lm3)
anova(lm3.contrast)
anova(lm3.contrast)
t.test(lm4.contrast)
anova(lm4)
# Creating linear model and finding estimated means and confidence intervals
lm4 <- lm(sales_change~intrial * outlettype + staff_turnover, data=data)
( lm4.emm <- emmeans(lm4, ~intrial * outlettype + staff_turnover)  )
( lm4.contrast <- confint(pairs(lm4.emm)) )
#Using anova and summary to for null hypothesis testing
summary(lm4)
anova(lm4)
#Using anova and summary to for null hypothesis testing
summary(lm4)
anova(lm4)
